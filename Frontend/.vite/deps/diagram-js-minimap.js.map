{
  "version": 3,
  "sources": ["../../node_modules/diagram-js/lib/util/EscapeUtil.js", "../../node_modules/diagram-js/lib/util/GraphicsUtil.js", "../../node_modules/diagram-js/lib/util/IdGenerator.js", "../../node_modules/diagram-js-minimap/dist/index.esm.js"],
  "sourcesContent": ["/**\n * @param {string} str\n *\n * @return {string}\n */\nexport function escapeCSS(str) {\n  return CSS.escape(str);\n}\n\nvar HTML_ESCAPE_MAP = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\n/**\n * @param {string} str\n *\n * @return {string}\n */\nexport function escapeHTML(str) {\n  str = '' + str;\n\n  return str && str.replace(/[&<>\"']/g, function(match) {\n    return HTML_ESCAPE_MAP[match];\n  });\n}\n", "/**\n * SVGs for elements are generated by the {@link GraphicsFactory}.\n *\n * This utility gives quick access to the important semantic\n * parts of an element.\n */\n\n/**\n * Returns the visual part of a diagram element.\n *\n * @param {SVGElement} gfx\n *\n * @return {SVGElement}\n */\nexport function getVisual(gfx) {\n  return gfx.childNodes[0];\n}\n\n/**\n * Returns the children for a given diagram element.\n *\n * @param {SVGElement} gfx\n * @return {SVGElement}\n */\nexport function getChildren(gfx) {\n  return gfx.parentNode.childNodes[1];\n}", "/**\n * Util that provides unique IDs.\n *\n * @class\n * @constructor\n *\n * The ids can be customized via a given prefix and contain a random value to avoid collisions.\n *\n * @param {string} [prefix] a prefix to prepend to generated ids (for better readability)\n */\nexport default function IdGenerator(prefix) {\n\n  this._counter = 0;\n  this._prefix = (prefix ? prefix + '-' : '') + Math.floor(Math.random() * 1000000000) + '-';\n}\n\n/**\n * Returns a next unique ID.\n *\n * @return {string} the id\n */\nIdGenerator.prototype.next = function() {\n  return this._prefix + (++this._counter);\n};\n", "import { event, classes, attr as attr$1, query, queryAll } from 'min-dom';\nimport { create, attr, append, classes as classes$1, remove, clone, clear } from 'tiny-svg';\nimport { assign, every, isObject, isNumber } from 'min-dash';\nimport { escapeCSS } from 'diagram-js/lib/util/EscapeUtil';\nimport { getVisual } from 'diagram-js/lib/util/GraphicsUtil';\nimport IdGenerator from 'diagram-js/lib/util/IdGenerator';\n\nvar MINIMAP_VIEWBOX_PADDING = 50;\n\nvar IDS = new IdGenerator();\n\nvar RANGE = { min: 0.2, max: 4 },\n    NUM_STEPS = 10;\n\nvar DELTA_THRESHOLD = 0.1;\n\nvar LOW_PRIORITY = 250;\n\n\n/**\n * A minimap that reflects and lets you navigate the diagram.\n */\nfunction Minimap(\n    config, injector, eventBus,\n    canvas, elementRegistry) {\n\n  var self = this;\n\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n  this._eventBus = eventBus;\n  this._injector = injector;\n\n  this._state = {\n    isOpen: undefined,\n    isDragging: false,\n    initialDragPosition: null,\n    offsetViewport: null,\n    cachedViewbox: null,\n    dragger: null,\n    svgClientRect: null,\n    parentClientRect: null,\n    zoomDelta: 0\n  };\n\n  this._minimapId = IDS.next();\n\n  this._init();\n\n  this.toggle((config && config.open) || false);\n\n  function centerViewbox(point) {\n\n    // getBoundingClientRect might return zero-dimensional when called for the first time\n    if (!self._state._svgClientRect || isZeroDimensional(self._state._svgClientRect)) {\n      self._state._svgClientRect = self._svg.getBoundingClientRect();\n    }\n\n    var diagramPoint = mapMousePositionToDiagramPoint({\n      x: point.x - self._state._svgClientRect.left,\n      y: point.y - self._state._svgClientRect.top\n    }, self._svg, self._lastViewbox);\n\n    setViewboxCenteredAroundPoint(diagramPoint, self._canvas);\n\n    self._update();\n  }\n\n  function mousedown(center) {\n\n    return function onMousedown(event$1) {\n      var point = getPoint(event$1);\n\n      // getBoundingClientRect might return zero-dimensional when called for the first time\n      if (!self._state._svgClientRect || isZeroDimensional(self._state._svgClientRect)) {\n        self._state._svgClientRect = self._svg.getBoundingClientRect();\n      }\n\n      if (center) {\n        centerViewbox(point);\n      }\n\n      var diagramPoint = mapMousePositionToDiagramPoint({\n        x: point.x - self._state._svgClientRect.left,\n        y: point.y - self._state._svgClientRect.top\n      }, self._svg, self._lastViewbox);\n\n      var viewbox = canvas.viewbox();\n\n      var offsetViewport = getOffsetViewport(diagramPoint, viewbox);\n\n      var initialViewportDomRect = self._viewportDom.getBoundingClientRect();\n\n      // take border into account (regardless of width)\n      var offsetViewportDom = {\n        x: point.x - initialViewportDomRect.left + 1,\n        y: point.y - initialViewportDomRect.top + 1\n      };\n\n      // init dragging\n      assign(self._state, {\n        cachedViewbox: viewbox,\n        initialDragPosition: {\n          x: point.x,\n          y: point.y\n        },\n        isDragging: true,\n        offsetViewport: offsetViewport,\n        offsetViewportDom: offsetViewportDom,\n        viewportClientRect: self._viewport.getBoundingClientRect(),\n        parentClientRect: self._parent.getBoundingClientRect()\n      });\n\n      event.bind(document, 'mousemove', onMousemove);\n      event.bind(document, 'mouseup', onMouseup);\n    };\n  }\n\n  function onMousemove(event) {\n    var point = getPoint(event);\n\n    // set viewbox if dragging active\n    if (self._state.isDragging) {\n\n      // getBoundingClientRect might return zero-dimensional when called for the first time\n      if (!self._state._svgClientRect || isZeroDimensional(self._state._svgClientRect)) {\n        self._state._svgClientRect = self._svg.getBoundingClientRect();\n      }\n\n      // update viewport DOM\n      var offsetViewportDom = self._state.offsetViewportDom,\n          viewportClientRect = self._state.viewportClientRect,\n          parentClientRect = self._state.parentClientRect;\n\n      assign(self._viewportDom.style, {\n        top: (point.y - offsetViewportDom.y - parentClientRect.top) + 'px',\n        left: (point.x - offsetViewportDom.x - parentClientRect.left) + 'px'\n      });\n\n      // update overlay\n      var clipPath = getOverlayClipPath(parentClientRect, {\n        top: point.y - offsetViewportDom.y - parentClientRect.top,\n        left: point.x - offsetViewportDom.x - parentClientRect.left,\n        width: viewportClientRect.width,\n        height: viewportClientRect.height\n      });\n\n      assign(self._overlay.style, {\n        clipPath: clipPath\n      });\n\n      var diagramPoint = mapMousePositionToDiagramPoint({\n        x: point.x - self._state._svgClientRect.left,\n        y: point.y - self._state._svgClientRect.top\n      }, self._svg, self._lastViewbox);\n\n      setViewboxCenteredAroundPoint({\n        x: diagramPoint.x - self._state.offsetViewport.x,\n        y: diagramPoint.y - self._state.offsetViewport.y\n      }, self._canvas);\n    }\n  }\n\n  function onMouseup(event$1) {\n    var point = getPoint(event$1);\n\n    if (self._state.isDragging) {\n\n      // treat event as click\n      if (self._state.initialDragPosition.x === point.x\n          && self._state.initialDragPosition.y === point.y) {\n        centerViewbox(event$1);\n      }\n\n      self._update();\n\n      // end dragging\n      assign(self._state, {\n        cachedViewbox: null,\n        initialDragPosition: null,\n        isDragging: false,\n        offsetViewport: null,\n        offsetViewportDom: null\n      });\n\n      event.unbind(document, 'mousemove', onMousemove);\n      event.unbind(document, 'mouseup', onMouseup);\n    }\n  }\n\n  // dragging viewport scrolls canvas\n  event.bind(this._viewportDom, 'mousedown', mousedown(false));\n  event.bind(this._svg, 'mousedown', mousedown(true));\n\n  event.bind(this._parent, 'wheel', function(event) {\n\n    // stop propagation and handle scroll differently\n    event.preventDefault();\n    event.stopPropagation();\n\n    // only zoom in on ctrl; this aligns with diagram-js navigation behavior\n    if (!event.ctrlKey) {\n      return;\n    }\n\n    // getBoundingClientRect might return zero-dimensional when called for the first time\n    if (!self._state._svgClientRect || isZeroDimensional(self._state._svgClientRect)) {\n      self._state._svgClientRect = self._svg.getBoundingClientRect();\n    }\n\n    // disallow zooming through viewport outside of minimap as it is very confusing\n    if (!isPointInside(event, self._state._svgClientRect)) {\n      return;\n    }\n\n    var factor = event.deltaMode === 0 ? 0.020 : 0.32;\n\n    var delta = (\n      Math.sqrt(\n        Math.pow(event.deltaY, 2) +\n        Math.pow(event.deltaX, 2)\n      ) * sign(event.deltaY) * -factor\n    );\n\n    // add until threshold reached\n    self._state.zoomDelta += delta;\n\n    if (Math.abs(self._state.zoomDelta) > DELTA_THRESHOLD) {\n      var direction = delta > 0 ? 1 : -1;\n\n      var currentLinearZoomLevel = Math.log(canvas.zoom()) / Math.log(10);\n\n      // zoom with half the step size of stepZoom\n      var stepSize = getStepSize(RANGE, NUM_STEPS * 2);\n\n      // snap to a proximate zoom step\n      var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize;\n\n      // increase or decrease one zoom step in the given direction\n      newLinearZoomLevel += stepSize * direction;\n\n      // calculate the absolute logarithmic zoom level based on the linear zoom level\n      // (e.g. 2 for an absolute x2 zoom)\n      var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\n\n      canvas.zoom(cap(RANGE, newLogZoomLevel), diagramPoint);\n\n      // reset\n      self._state.zoomDelta = 0;\n\n      var diagramPoint = mapMousePositionToDiagramPoint({\n        x: event.clientX - self._state._svgClientRect.left,\n        y: event.clientY - self._state._svgClientRect.top\n      }, self._svg, self._lastViewbox);\n\n      setViewboxCenteredAroundPoint(diagramPoint, self._canvas);\n\n      self._update();\n    }\n  });\n\n  event.bind(this._toggle, 'click', function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    self.toggle();\n  });\n\n  // add shape on shape/connection added\n  eventBus.on([ 'shape.added', 'connection.added' ], function(context) {\n    var element = context.element;\n\n    self._addElement(element);\n\n    self._update();\n  });\n\n  // remove shape on shape/connection removed\n  eventBus.on([ 'shape.removed', 'connection.removed' ], function(context) {\n    var element = context.element;\n\n    self._removeElement(element);\n\n    self._update();\n  });\n\n  // update on elements changed\n  eventBus.on('elements.changed', LOW_PRIORITY, function(context) {\n    var elements = context.elements;\n\n    elements.forEach(function(element) {\n      self._updateElement(element);\n    });\n\n    self._update();\n  });\n\n  // update on element ID update\n  eventBus.on('element.updateId', function(context) {\n    var element = context.element,\n        newId = context.newId;\n\n    self._updateElementId(element, newId);\n  });\n\n  // update on viewbox changed\n  eventBus.on('canvas.viewbox.changed', function() {\n    if (!self._state.isDragging) {\n      self._update();\n    }\n  });\n\n  eventBus.on('canvas.resized', function() {\n\n    // only update if present in DOM\n    if (document.body.contains(self._parent)) {\n      if (!self._state.isDragging) {\n        self._update();\n      }\n\n      self._state._svgClientRect = self._svg.getBoundingClientRect();\n    }\n\n  });\n\n  eventBus.on([ 'root.set', 'plane.set' ], function(event) {\n    self._clear();\n\n    var element = event.element || event.plane.rootElement;\n\n    element.children.forEach(function(el) {\n      self._addElement(el);\n    });\n\n    self._update();\n  });\n\n}\n\nMinimap.$inject = [\n  'config.minimap',\n  'injector',\n  'eventBus',\n  'canvas',\n  'elementRegistry'\n];\n\nMinimap.prototype._init = function() {\n  var canvas = this._canvas,\n      container = canvas.getContainer();\n\n  // create parent div\n  var parent = this._parent = document.createElement('div');\n\n  classes(parent).add('djs-minimap');\n\n  container.appendChild(parent);\n\n  // create toggle\n  var toggle = this._toggle = document.createElement('div');\n\n  classes(toggle).add('toggle');\n\n  parent.appendChild(toggle);\n\n  // create map\n  var map = this._map = document.createElement('div');\n\n  classes(map).add('map');\n\n  parent.appendChild(map);\n\n  // create svg\n  var svg = this._svg = create('svg');\n  attr(svg, { width: '100%', height: '100%' });\n  append(map, svg);\n\n  // add groups\n  var elementsGroup = this._elementsGroup = create('g');\n  append(svg, elementsGroup);\n\n  var viewportGroup = this._viewportGroup = create('g');\n  append(svg, viewportGroup);\n\n  // add viewport SVG\n  var viewport = this._viewport = create('rect');\n\n  classes$1(viewport).add('viewport');\n\n  append(viewportGroup, viewport);\n\n  // prevent drag propagation\n  event.bind(parent, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  // add viewport DOM\n  var viewportDom = this._viewportDom = document.createElement('div');\n\n  classes(viewportDom).add('viewport-dom');\n\n  this._parent.appendChild(viewportDom);\n\n  // add overlay\n  var overlay = this._overlay = document.createElement('div');\n\n  classes(overlay).add('overlay');\n\n  this._parent.appendChild(overlay);\n};\n\nMinimap.prototype._update = function() {\n  var viewbox = this._canvas.viewbox(),\n      innerViewbox = viewbox.inner,\n      outerViewbox = viewbox.outer;\n\n  if (!validViewbox(viewbox)) {\n    return;\n  }\n\n  var x, y, width, height;\n\n  var widthDifference = outerViewbox.width - innerViewbox.width,\n      heightDifference = outerViewbox.height - innerViewbox.height;\n\n  // update viewbox\n  // x\n  if (innerViewbox.width < outerViewbox.width) {\n    x = innerViewbox.x - widthDifference / 2;\n    width = outerViewbox.width;\n\n    if (innerViewbox.x + innerViewbox.width < outerViewbox.width) {\n      x = Math.min(0, innerViewbox.x);\n    }\n  } else {\n    x = innerViewbox.x;\n    width = innerViewbox.width;\n  }\n\n  // y\n  if (innerViewbox.height < outerViewbox.height) {\n    y = innerViewbox.y - heightDifference / 2;\n    height = outerViewbox.height;\n\n    if (innerViewbox.y + innerViewbox.height < outerViewbox.height) {\n      y = Math.min(0, innerViewbox.y);\n    }\n  } else {\n    y = innerViewbox.y;\n    height = innerViewbox.height;\n  }\n\n  // apply some padding\n  x = x - MINIMAP_VIEWBOX_PADDING;\n  y = y - MINIMAP_VIEWBOX_PADDING;\n  width = width + MINIMAP_VIEWBOX_PADDING * 2;\n  height = height + MINIMAP_VIEWBOX_PADDING * 2;\n\n  this._lastViewbox = {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n\n  attr(this._svg, {\n    viewBox: x + ', ' + y + ', ' + width + ', ' + height\n  });\n\n  // update viewport SVG\n  attr(this._viewport, {\n    x: viewbox.x,\n    y: viewbox.y,\n    width: viewbox.width,\n    height: viewbox.height\n  });\n\n  // update viewport DOM\n  var parentClientRect = this._state._parentClientRect = this._parent.getBoundingClientRect();\n  var viewportClientRect = this._viewport.getBoundingClientRect();\n\n  var withoutParentOffset = {\n    top: viewportClientRect.top - parentClientRect.top,\n    left: viewportClientRect.left - parentClientRect.left,\n    width: viewportClientRect.width,\n    height: viewportClientRect.height\n  };\n\n  assign(this._viewportDom.style, {\n    top: withoutParentOffset.top + 'px',\n    left: withoutParentOffset.left + 'px',\n    width: withoutParentOffset.width + 'px',\n    height: withoutParentOffset.height + 'px'\n  });\n\n  // update overlay\n  var clipPath = getOverlayClipPath(parentClientRect, withoutParentOffset);\n\n  assign(this._overlay.style, {\n    clipPath: clipPath\n  });\n};\n\nMinimap.prototype.open = function() {\n  assign(this._state, { isOpen: true });\n\n  classes(this._parent).add('open');\n\n  var translate = this._injector.get('translate', false) || function(s) { return s; };\n\n  attr$1(this._toggle, 'title', translate('Close minimap'));\n\n  this._update();\n\n  this._eventBus.fire('minimap.toggle', { open: true });\n};\n\nMinimap.prototype.close = function() {\n  assign(this._state, { isOpen: false });\n\n  classes(this._parent).remove('open');\n\n  var translate = this._injector.get('translate', false) || function(s) { return s; };\n\n  attr$1(this._toggle, 'title', translate('Open minimap'));\n\n  this._eventBus.fire('minimap.toggle', { open: false });\n};\n\nMinimap.prototype.toggle = function(open) {\n\n  var currentOpen = this.isOpen();\n\n  if (typeof open === 'undefined') {\n    open = !currentOpen;\n  }\n\n  if (open == currentOpen) {\n    return;\n  }\n\n  if (open) {\n    this.open();\n  } else {\n    this.close();\n  }\n};\n\nMinimap.prototype.isOpen = function() {\n  return this._state.isOpen;\n};\n\nMinimap.prototype._updateElement = function(element) {\n\n  try {\n\n    // if parent is null element has been removed, if parent is undefined parent is root\n    if (element.parent !== undefined && element.parent !== null) {\n      this._removeElement(element);\n      this._addElement(element);\n    }\n  } catch (error) {\n    console.warn('Minimap#_updateElement errored', error);\n  }\n\n};\n\nMinimap.prototype._updateElementId = function(element, newId) {\n\n  try {\n    var elementGfx = query('#' + escapeCSS(this._prefixId(element.id)), this._elementsGroup);\n\n    if (elementGfx) {\n      elementGfx.id = this._prefixId(newId);\n    }\n  } catch (error) {\n    console.warn('Minimap#_updateElementId errored', error);\n  }\n\n};\n\n/**\n * Checks if an element is on the currently active plane.\n */\nMinimap.prototype.isOnActivePlane = function(element) {\n  var canvas = this._canvas;\n\n  // diagram-js@8\n  if (canvas.findRoot) {\n    return canvas.findRoot(element) === canvas.getRootElement();\n  }\n\n  // diagram-js>=7.4.0\n  if (canvas.findPlane) {\n    return canvas.findPlane(element) === canvas.getActivePlane();\n  }\n\n  // diagram-js<7.4.0\n  return true;\n};\n\n\n/**\n * Adds an element to the minimap.\n */\nMinimap.prototype._addElement = function(element) {\n  var self = this;\n\n  this._removeElement(element);\n\n  if (!this.isOnActivePlane(element)) {\n    return;\n  }\n\n  var parent,\n      x, y;\n\n  var newElementGfx = this._createElement(element);\n  var newElementParentGfx = query('#' + escapeCSS(this._prefixId(element.parent.id)), this._elementsGroup);\n\n  if (newElementGfx) {\n\n    var elementGfx = this._elementRegistry.getGraphics(element);\n    var parentGfx = this._elementRegistry.getGraphics(element.parent);\n\n    var index = getIndexOfChildInParentChildren(elementGfx, parentGfx);\n\n    // index can be 0\n    if (index !== 'undefined') {\n      if (newElementParentGfx) {\n\n        // in cases of doubt add as last child\n        if (newElementParentGfx.childNodes.length > index) {\n          insertChildAtIndex(newElementGfx, newElementParentGfx, index);\n        } else {\n          insertChildAtIndex(newElementGfx, newElementParentGfx, newElementParentGfx.childNodes.length - 1);\n        }\n\n      } else {\n        this._elementsGroup.appendChild(newElementGfx);\n      }\n\n    } else {\n\n      // index undefined\n      this._elementsGroup.appendChild(newElementGfx);\n    }\n\n    if (isConnection(element)) {\n      parent = element.parent;\n      x = 0;\n      y = 0;\n\n      if (typeof parent.x !== 'undefined' && typeof parent.y !== 'undefined') {\n        x = -parent.x;\n        y = -parent.y;\n      }\n\n      attr(newElementGfx, { transform: 'translate(' + x + ' ' + y + ')' });\n    } else {\n      x = element.x;\n      y = element.y;\n\n      if (newElementParentGfx) {\n        parent = element.parent;\n\n        x -= parent.x;\n        y -= parent.y;\n      }\n\n      attr(newElementGfx, { transform: 'translate(' + x + ' ' + y + ')' });\n    }\n\n    if (element.children && element.children.length) {\n      element.children.forEach(function(child) {\n        self._addElement(child);\n      });\n    }\n\n    return newElementGfx;\n  }\n};\n\nMinimap.prototype._removeElement = function(element) {\n  var elementGfx = this._svg.getElementById(this._prefixId(element.id));\n\n  if (elementGfx) {\n    remove(elementGfx);\n  }\n};\n\nMinimap.prototype._createElement = function(element) {\n  var gfx = this._elementRegistry.getGraphics(element),\n      visual;\n\n  if (gfx) {\n    visual = getVisual(gfx);\n\n    if (visual) {\n      var elementGfx = sanitize(clone(visual));\n\n      attr(elementGfx, { id: this._prefixId(element.id) });\n\n      return elementGfx;\n    }\n  }\n};\n\nMinimap.prototype._clear = function() {\n  clear(this._elementsGroup);\n};\n\nMinimap.prototype._prefixId = function(id) {\n  return 'djs-minimap-' + id + '-' + this._minimapId;\n};\n\n\nfunction isConnection(element) {\n  return element.waypoints;\n}\n\nfunction getOffsetViewport(diagramPoint, viewbox) {\n  var viewboxCenter = {\n    x: viewbox.x + (viewbox.width / 2),\n    y: viewbox.y + (viewbox.height / 2)\n  };\n\n  return {\n    x: diagramPoint.x - viewboxCenter.x,\n    y: diagramPoint.y - viewboxCenter.y\n  };\n}\n\nfunction mapMousePositionToDiagramPoint(position, svg, lastViewbox) {\n\n  // firefox returns 0 for clientWidth and clientHeight\n  var boundingClientRect = svg.getBoundingClientRect();\n\n  // take different aspect ratios of default layers bounding box and minimap into account\n  var bBox =\n    fitAspectRatio(lastViewbox, boundingClientRect.width / boundingClientRect.height);\n\n  // map click position to diagram position\n  var diagramX = map(position.x, 0, boundingClientRect.width, bBox.x, bBox.x + bBox.width),\n      diagramY = map(position.y, 0, boundingClientRect.height, bBox.y, bBox.y + bBox.height);\n\n  return {\n    x: diagramX,\n    y: diagramY\n  };\n}\n\nfunction setViewboxCenteredAroundPoint(point, canvas) {\n\n  // get cached viewbox to preserve zoom\n  var cachedViewbox = canvas.viewbox(),\n      cachedViewboxWidth = cachedViewbox.width,\n      cachedViewboxHeight = cachedViewbox.height;\n\n  canvas.viewbox({\n    x: point.x - cachedViewboxWidth / 2,\n    y: point.y - cachedViewboxHeight / 2,\n    width: cachedViewboxWidth,\n    height: cachedViewboxHeight\n  });\n}\n\nfunction fitAspectRatio(bounds, targetAspectRatio) {\n  var aspectRatio = bounds.width / bounds.height;\n\n  // assigning to bounds throws exception in IE11\n  var newBounds = assign({}, {\n    x: bounds.x,\n    y: bounds.y,\n    width: bounds.width,\n    height: bounds.height\n  });\n\n  if (aspectRatio > targetAspectRatio) {\n\n    // height needs to be fitted\n    var height = newBounds.width * (1 / targetAspectRatio),\n        y = newBounds.y - ((height - newBounds.height) / 2);\n\n    assign(newBounds, {\n      y: y,\n      height: height\n    });\n  } else if (aspectRatio < targetAspectRatio) {\n\n    // width needs to be fitted\n    var width = newBounds.height * targetAspectRatio,\n        x = newBounds.x - ((width - newBounds.width) / 2);\n\n    assign(newBounds, {\n      x: x,\n      width: width\n    });\n  }\n\n  return newBounds;\n}\n\nfunction map(x, inMin, inMax, outMin, outMax) {\n  var inRange = inMax - inMin,\n      outRange = outMax - outMin;\n\n  return (x - inMin) * outRange / inRange + outMin;\n}\n\n/**\n * Returns index of child in children of parent.\n *\n * g\n * '- g.djs-element // parentGfx\n * '- g.djs-children\n *    '- g\n *       '-g.djs-element // childGfx\n */\nfunction getIndexOfChildInParentChildren(childGfx, parentGfx) {\n  var childrenGroup = query('.djs-children', parentGfx.parentNode);\n\n  if (!childrenGroup) {\n    return;\n  }\n\n  var childrenArray = [].slice.call(childrenGroup.childNodes);\n\n  var indexOfChild = -1;\n\n  childrenArray.forEach(function(childGroup, index) {\n    if (query('.djs-element', childGroup) === childGfx) {\n      indexOfChild = index;\n    }\n  });\n\n  return indexOfChild;\n}\n\nfunction insertChildAtIndex(childGfx, parentGfx, index) {\n  var childContainer = getChildContainer(parentGfx);\n\n  var childrenArray = [].slice.call(childContainer.childNodes);\n\n  var childAtIndex = childrenArray[index];\n\n  if (childAtIndex) {\n    parentGfx.insertBefore(childGfx, childAtIndex.nextSibling);\n  } else {\n    parentGfx.appendChild(childGfx);\n  }\n}\n\nfunction getChildContainer(parentGfx) {\n  var container = query('.children', parentGfx);\n\n  if (!container) {\n    container = create('g', { class: 'children' });\n    append(parentGfx, container);\n  }\n\n  return container;\n}\n\nfunction isZeroDimensional(clientRect) {\n  return clientRect.width === 0 && clientRect.height === 0;\n}\n\nfunction isPointInside(point, rect) {\n  return point.x > rect.left\n    && point.x < rect.left + rect.width\n    && point.y > rect.top\n    && point.y < rect.top + rect.height;\n}\n\nvar sign = Math.sign || function(n) {\n  return n >= 0 ? 1 : -1;\n};\n\n/**\n * Get step size for given range and number of steps.\n *\n * @param {Object} range - Range.\n * @param {number} range.min - Range minimum.\n * @param {number} range.max - Range maximum.\n */\nfunction getStepSize(range, steps) {\n\n  var minLinearRange = Math.log(range.min) / Math.log(10),\n      maxLinearRange = Math.log(range.max) / Math.log(10);\n\n  var absoluteLinearRange = Math.abs(minLinearRange) + Math.abs(maxLinearRange);\n\n  return absoluteLinearRange / steps;\n}\n\nfunction cap(range, scale) {\n  return Math.max(range.min, Math.min(range.max, scale));\n}\n\nfunction getOverlayClipPath(outer, inner) {\n  var coordinates = [\n    toCoordinatesString(inner.left, inner.top),\n    toCoordinatesString(inner.left + inner.width, inner.top),\n    toCoordinatesString(inner.left + inner.width, inner.top + inner.height),\n    toCoordinatesString(inner.left, inner.top + inner.height),\n    toCoordinatesString(inner.left, outer.height),\n    toCoordinatesString(outer.width, outer.height),\n    toCoordinatesString(outer.width, 0),\n    toCoordinatesString(0, 0),\n    toCoordinatesString(0, outer.height),\n    toCoordinatesString(inner.left, outer.height)\n  ].join(', ');\n\n  return 'polygon(' + coordinates + ')';\n}\n\nfunction toCoordinatesString(x, y) {\n  return x + 'px ' + y + 'px';\n}\n\nfunction validViewbox(viewBox) {\n\n  return every(viewBox, function(value) {\n\n    // check deeper structures like inner or outer viewbox\n    if (isObject(value)) {\n      return validViewbox(value);\n    }\n\n    return isNumber(value) && isFinite(value);\n  });\n}\n\nfunction getPoint(event) {\n  if (event.center) {\n    return event.center;\n  }\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\n\n// removes all elements with an id attribute\nfunction sanitize(gfx) {\n  queryAll('[id]', gfx).forEach(function(element) {\n    element.remove();\n  });\n\n  return gfx;\n}\n\nvar index = {\r\n  __init__: [ 'minimap' ],\r\n  minimap: [ 'type', Minimap ]\r\n};\n\nexport { index as default };\n"],
  "mappings": "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",
  "names": ["event", "map", "attr", "classes", "index"]
}
